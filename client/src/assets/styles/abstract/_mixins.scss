// src/assets/styles/abstract/_mixins.scss
@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
      @media (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    }
  }
  
  @mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
  }
  
  @mixin grid($columns: 1, $gap: map-get($spacing, 'base')) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
  }
  
  // Shadow utilities
  @mixin shadow($level: 1) {
    @if $level == 1 {
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    } @else if $level == 2 {
      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15), 0 2px 4px rgba(0, 0, 0, 0.12);
    } @else if $level == 3 {
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), 0 3px 6px rgba(0, 0, 0, 0.10);
    }
  }
  
  // Button styles
  @mixin button-variant($bg-color, $text-color: white) {
    background-color: $bg-color;
    color: $text-color;
    padding: map-get($spacing, 'sm') map-get($spacing, 'base');
    border-radius: 4px;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  
    &:hover {
      background-color: darken($bg-color, 10%);
    }
  
    &:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }
  }